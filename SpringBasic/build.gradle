plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2' // 최신 버전 유지
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// ✅ Lombok 설정 추가
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ 공통 Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // ✅ Lombok 라이브러리 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // ✅ 테스트 관련 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // ✅ 개발 중 서버 재시작 없이 View 파일 변경 가능하도록 DevTools 추가
    implementation 'org.springframework.boot:spring-boot-devtools'

    // ✅ JPA, H2 DB 관련 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    // ✅ JSR-330 Provider
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

    // ✅ web 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
}

tasks.named('test') {
    useJUnitPlatform()
}
